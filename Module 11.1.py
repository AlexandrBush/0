'''
Я выбрал следующие библиотеки для изучения:

requests:
Документация: https://docs.python-requests.org/en/latest/
Причина выбора: Эта библиотека является стандартом де-факто для работы с HTTP-запросами в Python. Она проста в
использовании и обладает широким функционалом.

numpy:
Документация: https://numpy.org/doc/stable/
Причина выбора: NumPy - это фундаментальная библиотека для научных вычислений в Python. Она предоставляет эффективные
структуры данных и функции для работы с массивами.

pillow:
Документация: https://pillow.readthedocs.io/en/stable/
Причина выбора: Pillow - это удобная библиотека для работы с изображениями. Она позволяет легко загружать,
обрабатывать и сохранять изображения.
'''

#Примеры использования библиотек
#1. requests

import requests

# Запрос данных с сайта
response = requests.get('https://api.github.com')

# Вывод статус кода ответа
print(f"Статус код: {response.status_code}")

# Вывод заголовков ответа
print(f"Заголовки: {response.headers}")

# Вывод содержимого ответа в формате JSON
print(f"Данные: {response.json()}")
print('''
Возможности, которые предоставила библиотека requests:
Упрощение отправки HTTP-запросов.
Поддержка различных методов запросов (GET, POST, PUT, DELETE и т.д.).
Автоматическая обработка JSON-ответов.
Удобный доступ к заголовкам и статус кодам ответов.

Расширение возможностей Python:
Возможность легко взаимодействовать с веб-сервисами и API.
Получение и обработка данных из интернета.
''')

#3. pillow
from PIL import Image, ImageFilter

# Загрузка изображения
image = Image.open('Example.jfif')

# Изменение размера изображения
resized_image = image.resize((300, 300))

# Применение эффекта размытия
blurred_image = resized_image.filter(ImageFilter.BLUR)

# Сохранение изображения в другом формате
blurred_image.save('blurred_example.png')

# Отображение обработанного изображения
blurred_image.show()
print('''
Возможности, которые предоставила библиотека pillow:
Загрузка и сохранение изображений в различных форматах.
Изменение размера, поворот и обрезка изображений.
Применение различных фильтров и эффектов (размытие, резкость, монохром и т.д.).
Работа с цветом и альфа-каналом.

Расширение возможностей Python:
Возможность легко обрабатывать изображения.
Создание и редактирование графических изображений.
''')

#3. numpy
import numpy as np

# Создание массива чисел
array = np.array([1, 2, 3, 4, 5])

# Выполнение математических операций
array_squared = np.square(array)
array_sum = np.sum(array)
array_mean = np.mean(array)

# Вывод результатов
print(f"Исходный массив: {array}")
print(f"Массив в квадрате: {array_squared}")
print(f"Сумма элементов массива: {array_sum}")
print(f"Среднее значение элементов массива: {array_mean}")
print('''
Возможности, которые предоставила библиотека numpy:
Эффективная работа с многомерными массивами.
Выполнение математических операций над массивами.
Поддержка линейной алгебры, статистики и других научных вычислений.

Расширение возможностей Python:
Ускорение вычислений за счет использования оптимизированных алгоритмов.
Упрощение работы с большими объемами данных.
''')
'''
Заключение
Выбранные библиотеки requests, pillow и numpy значительно расширяют возможности Python в области веб-скрапинга, 
обработки изображений и научных вычислений.

GitHub репозиторий с кодом: https://github.com/AlexandrBush/My-work/blob/main/Module%2011.1.py

Комментарии в коде объясняют, как работает каждая строка.
'''
